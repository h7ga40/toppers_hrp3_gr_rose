
		TOPPERS/HRP3カーネル
		変更履歴

		対応バージョン: Release 3.3.0
		最終更新: 2020年12月23日

このドキュメントは，TOPPERS/HRP3カーネルの変更履歴を，新しい方から順に
記述したものである．また，TOPPERS/HRP2カーネル Release 2.2.1との主な違
いについても記載している．

----------------------------------------------------------------------
 TOPPERS/HRP Kernel
     Toyohashi Open Platform for Embedded Real-Time Systems/
     High Reliable system Profile Kernel

 Copyright (C) 2016-2020 by Embedded and Real-Time Systems Laboratory
             Graduate School of Information Science, Nagoya Univ., JAPAN
 
 上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
 ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
     権表示，この利用条件および下記の無保証規定が，そのままの形でソー
     スコード中に含まれていること．
 (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
     用できる形で再配布する場合には，再配布に伴うドキュメント（利用
     者マニュアルなど）に，上記の著作権表示，この利用条件および下記
     の無保証規定を掲載すること．
 (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
     用できない形で再配布する場合には，次のいずれかの条件を満たすこ
     と．
   (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
       作権表示，この利用条件および下記の無保証規定を掲載すること．
   (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
       報告すること．
 (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
     害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
     また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
     由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
     免責すること．
 
 本ソフトウェアは，無保証で提供されているものである．上記著作権者お
 よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
 に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
 アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
 の責任を負わない．
 
 $Id: version.txt 1005 2020-12-20 11:17:06Z ertl-hiro $
----------------------------------------------------------------------

		TOPPERS/HRP3カーネル
		Release 3.2.0 から 3.3.0 への主な変更点

○変更点のリスト

●仕様変更，機能拡張

・拡張情報の型をEXINFに変更

・標準スタックリージョンの新設
	- DEF_SRGに標準スタックリージョンを定義するためのパラメータを追加．
	- ユーザスタックを配置するメモリリージョンを，ターゲット依存部で変
	  更できるように，MemregUserStackを導入．デフォルトの配置先を，標
	  準スタックリージョンに変更．
	- AllocSystemStackにパラメータを追加．
	- [ARMコア依存部，ダミーターゲット依存部] スタック領域を配置するメ
	  モリリージョンを，標準スタックリージョンに変更．
	  AllocSystemStackにパラメータを追加（使用していない）．

・CRE_TSKのエラー条件の変更
	- システムタスクの生成時に，stkszが0の場合にE_PARエラーとする処理
	  を削除（システムスタックサイズがターゲット定義の最小値よりも小さ
	  い場合をエラーとするために，問題ない）．

・[ARMコア依存部] 性能評価時のキャッシュの無効化の実装
	- HIST_INVALIDATE_CACHEがマクロ定義されている場合には，性能評価に
	  おいて実行時間を計測する前に，キャッシュと分岐予測を無効化する．

●不具合修正

・タスクコンテキストからシステム周期／タイムウィンドウの実行開始処理を
　行う場合の問題を修正
	- タスクから呼ばれたサービスコールから，システム周期およびタイムウィ
	  ンドウの実行開始処理を行う場合に，CPUロック状態を解除するタイミ
	  ングでタスク切換えが起こることを防ぐために，割込み優先度マスクを，
	  システム周期／タイムウィンドウ切換え割込みの割込み優先度に設定す
	  るように修正．
	- また，実行中の保護ドメインをカーネルドメインに設定するように修正．
	- wait_tmout，wait_tmout_okが，タスクコンテキストから呼ばれても問
	  題ないように修正．
	- [ダミーターゲット依存部] INTPRI_TIMERの定義を追加．

・通知ハンドラ名の衝突の問題の修正
	- タイムウィンドウ通知の通知ハンドラの関数名が，周期通知やアラーム
	  通知と衝突する可能性がある問題を修正．

・rot_rdqが非タスクコンテキストから呼ばれた場合の処理の修正
	- rot_rdqが非タスクコンテキストから呼ばれた場合にも，実行状態のタ
	  スクが属するスケジュール単位を操作対象としていた不具合を修正．

・xsns_dpnの不具合修正
	- タスクコンテキストから呼び出された場合は，trueを返すように修正．

・静的APIテーブル（kernel_api.def）の不具合修正
	- DEF_SVCのfncdパラメータの型を符号付き整数に修正．
	- fncdが負の場合のテストを追加（pass2_obj3.cfg）．

・コンフィギュレータの不具合修正
	- 変数のインクリメントによる通知における変数のアクセス許可に関する
	  エラーチェックの不具合を修正．
	- パス4の終了処理ルーチンに関するチェックの不具合を修正．
	- ユーザスタック領域の参照操作に対するアクセス許可パターンが，タス
	  クと同じ値に設定されない不具合を修正．
	- ユーザタスクの生成で，sstkを記述し，sstkszの記述を省略した場合に，
	  エラーメッセージを出力した後，コンフィギュレータがエラーで落ちる
	  不具合を修正．
	- 手動メモリ配置で，stkをNULLとした場合に，エラーメッセージを出力
	  した後，コンフィギュレータがエラーで落ちる不具合を修正．
	- カーネルドメインに属する固定長メモリプールが，アクセス許可ベクタ
	  がデフォルトの値になっているかどうかの判定ができず，手動メモリ配
	  置の場合に検出されないエラーがある不具合を修正．
	- ユーザスタック領域および固定長メモリプール領域用のセクションを
	  ATT_SECした場合をエラーとする．
	- DEF_SRGで，指定したメモリリージョンが未登録の場合に，エラーメッ
	  セージを出力した後，コンフィギュレータがエラーで落ちる不具合を修
	  正．
	- システム周期が設定されていない場合に，CRE_SOMとATT_TWDを記述する
	  と，警告メッセージを出力した後，コンフィギュレータがエラーで落ち
	  る不具合を修正．
	- メモリオブジェクトが1つも登録されていない場合に，コンフィギュレー
	  タがエラーで落ちる不具合を修正．
	- エラーメッセージの修正（"any kernel memory object" → "any
	  memory object"）

・USE_LATERPASS_DOMINIBを用いた時の不具合の修正
	- ドメイン初期化ブロックから参照する変数の宣言を，kernel_mem.cに生
	  成するように修正．
	- $schedcbListを，$globalVarsに追加．

・log_extsvc_enter/leaveの記述漏れの修正
	- tTraceLog.cに関数定義を追加．
	- ターゲット非依存部のリネーム記述に追加．

・ARMコア依存部，チップ依存部，ターゲット依存部の不具合修正
	- ユーザモードからは，システム周期オーバラン例外を要求できないよう
	  に修正．
	- T_EXCINF型のintpriフィールドを符号付き整数に修正．
	- TA_SDATA属性を無視するように修正．
	- パフォーマンスモニタによる性能評価が正しく動作するように修正．そ
	  の際に，USE_ARM_PM_HISTをUSE_ARM_PMCNTに，TOPPERS_ARM_PMCNT_DIV64
	  をUSE_ARM_PMCNT_DIV64にリネーム．
	- 計測前のキャッシュの無効化時に，TLBも無効化するように変更．
	- CT11MPCore依存部の割込みの数を修正．

・ダミーターゲット依存部の不具合修正
	- スタックサイズおよびスタック領域のチェックに関するマクロ定義の不
	  具合を修正．

●機能改善，実装改善

・get_infの実装改善
	- 排他制御するのをやめた（その必要がないため）．

・ショート定数データ領域をROMリージョンに置くとみなす条件の変更

・コンフィギュレータのエラーメッセージの改善
	- コンフィギュレータ本体のエラーメッセージ出力関数を拡張・整理．そ
	  れを活用するように生成スクリプトを変更．
	- メモリ領域や変数の先頭番地がNULLの場合に，アクセス権に関するエラー
	  チェックを行わないように修正．
	- カーネル管理外の割込みに関するエラーメッセージを改善．
	- DEF_SRGで，標準ショートRAMリージョン名の記述を省略した場合に，重
	  複したエラーメッセージが出る問題を修正．
	- ATT_SECで，mematrの不正を示すエラーメッセージを改善．
	- SAC_SYS，DEF_SCY，DEF_ICSが複数記述されている場合のエラーメッセー
	  ジを改善．
	- タイムウィンドウ通知に関するエラーメッセージを改善．
	- ATT_TWDの通知にタイムイベントハンドラを用いた場合のエラーメッセー
	  ジを改善．
	- 静的APIの文法エラーに対するエラーメッセージを改善．
	- 静的APIテーブルにエラーがあった場合に，ファイル名と行番号を出力
	  するように変更．

・パス3〜4でシンボルが見つからない場合のエラー検出の追加
	- コンフィギュレータのSYMBOL関数に，シンボルが見つからない場合にエ
	  ラーメッセージを出す機能を追加．
	- この機能に対応できるように，生成スクリプトを変更．

・オーバランハンドラ機能拡張の実装改善
	- オーバランハンドラがサポートされていない場合に，オーバランハンド
	  ラ初期化ブロックを生成しないように変更．
	- 生成スクリプトの記述スタイルを変更（他の類似記述と合わせた）．

・ARMコア依存部，チップ依存部，ターゲット依存部の実装改善
	- svc命令によってサービスコールを呼び出す方法を改善．
	- サービスコール／拡張サービスコールの出入口処理を改善．
	- ARMv7では，SMP有効時にACTLRのFWビットを設定するように修正．
	- 拡張サービスコールの入口のログ取得コードを改善．
	- cfg1_out.ld中で，.rodataセクションのリンク記述にKEEPをつけた．
	- 周辺デバイスへのポーリングに待ち（sil_dly_nse(100)）を入れた．
	- sil_dly_nseのアラインメントを64ビット境界に変更．
	- 不必要な命令の削除．

・GNU開発環境依存部の実装改善
	- kernel_cfg.oの.rodataセクションのリンク記述に，KEEPをつけるよう
	  に修正（リンカ最適化で，シンボルが削除されるのを防ぐため）．

・システムサービスの実装の改善
	- ログ情報の出力時に，渡されたログバッファに書き込まないように変更．
	- syslog_printfにおいて，必要なパラメータが5つより多い場合に，5つ
	  を超えるパラメータを読まないように変更．

・その他の実装改善
	- ターゲット依存部から呼ばれる割込み処理ルーチンの入口にassert文を
	  入れるように統一（twd_switchにassert文を追加）．
	- 保護ドメインのアクセス許可ベクタが設定済みか，カーネルメモリプー
	  ル領域が設定済みか（動的生成機能拡張パッケージのみ）のエラーチェッ
	  クコードを改善．
	- リンクオンリセクションのリンク後セクション名とラベルを適切な名称
	  に変更．
	- tTraceLog.c中のトレースログ関数を，マクロを呼び出す形に変更し，
	  マクロが定義されている場合のみコンパイルするように変更．

●その他（テストプログラム，サンプルプログラム等）

・TECSからカーネルを呼び出すための記述の変更
	- tKernel_inline.h中の引数がない関数の引数記述を(void)とする．

・コンフィギュレータのテスト（test_cfgディレクトリ）の追加

・ダミーのターゲット依存部（target/dummy_gcc）の変更
	- カーネル管理外の割込みに対応．
	- カーネル管理／カーネル管理外に固定の割込み番号／割込みハンドラ番
	  号を設定．
	- 割込みハンドラとCPU例外ハンドラの先頭番地のチェックを追加．
	- トレースログ取得の方法を変更．
	- トレースログ関数のリネーム記述を削除．

・テスト実行スクリプト（testexec.rb）の改善
	- 複数のカーネルライブラリを持てるように拡張．
	- 処理の指示方法（コマンド）の改善．
	- TARGET_OPTIONSへの記述順序の整理．

・性能評価プログラムの追加
	- 時間計測オーバヘッドの評価(1)（perf_measure1）を追加．
	- サービスコール呼出し時間の評価(1)（perf_pcalsvc1）を追加．
	- 拡張サービスコール呼出し時間の評価(1)（perf_pextsvc1）を追加．

・テストプログラムの修正
	- 通知処理のテスト(1)（test_notify1）の変数の型の誤り（intptr_tと
	  int_tのサイズが異なる場合に不具合が発生）を修正．
	- タイムウィンドウ通知に関するテスト(1)（test_twdnfy1）内のタイミ
	  ング依存のチェック処理を削除．

・テストプログラムの改善・変更
	- セマフォ機能のテスト(1)（test_sem1）のテスト項目を追加．
	- タイムウィンドウ通知に関するテスト（test_twdnfy）をtest_twdnfy1
	  にリネームし，テスト内容を改善．
	- タイムウィンドウ通知に関するテスト(2)（test_twdnfy2）を追加．
	- ARM依存のテストプログラムarm_cpuexcを，arm_cpuexc1にリネーム．テ
	  スト内容を変更（SVCによるCPU例外処理のテストを除外）．
	- ARM向けCPU例外処理のテスト(2)（arm_cpuexc2）を追加．

・カーネルの自己診断機能の拡充
	- カーネルの自己診断機能で整合性検査を行う範囲を広げた．
	- ミューテックス機能の自己診断機能を廃止．
	- [ARM依存部] TSKCTXBのチェックのための定義を追加．

・configureとutils/makerelease.rbの変更
	- shellライブラリを使用しないように変更（ruby 2.7.0以降で，標準ラ
	  イブラリに含まれなくなったため）．

・ドキュメントの充実，コメントの修正

・バージョン番号の更新
	- カーネルとカーネル仕様のバージョン番号を更新．

○ターゲット依存部の要修正箇所（3.2.0 → 3.3.0）

(1) 標準スタックリージョンの新設への対応
	- SecnameSystemStackにパラメータを追加する（使わなくても良い）．
	- 必要であれば，MemregUserStackを追加する．
	- スタック領域を配置するメモリリージョン（ターゲット依存部で定義し
	  ているもの）を，標準RAMリージョンから標準スタックリージョンに変
	  更する．

(2) タイムウィンドウ切換え割込みの割込み優先度
	- 高分解能タイマ割込みの割込み優先度（タイムウィンドウタイマ割込み
	  の割込み優先度と一致していなければならない）を，INTPRI_TIMERの名
	  称で参照できるようにする．

(3) トレースログ取得方法の変更
	- ターゲット依存部におけるトレースログ取得がC言語で記述されている
	  場合には，取得方法の変更に対応する．

----------------------------------------------------------------------

		TOPPERS/HRP3カーネル
		Release 3.1.0 から 3.2.0 への主な変更点

○変更点のリスト

●仕様変更，機能拡張

・設定できる最高のタスク優先度の機能の廃止
	- LMT_DOMを廃止．保護ドメイン初期化ブロックを変更．
	- 関連するエラーチェックを削除．
	- 保護ドメインに対する制限に関するテスト（test_lmtdom1，
	  test_lmtdom2）を廃止．

・システム周期とタイムウィンドウの開始のトレースログ
	- カーネルのコードに，トレースログを取るためのマクロを追加．
	- トレースログ記録のサンプルコードに，記録・表示する機能を追加．

・高分解能タイマが64ビットの場合に対応
	- t_stddef.hにおけるHRTCNT型の定義を変更．
	- set_hrt_eventにおいて，タイムイベントヒープが空の場合と，高分解
	  能タイマに指定する相対カウント値がHRTCNT_BOUNDよりも大きい場合の
	  処理を変更．マクロ定義のチェックを追加．
	- fch_hrtのソフトウェア割込みによる呼出し方法を変更．
	- MPCore内蔵タイマ用のタイマドライバ（USE_MPCORE_GTC_HRTの場合）と
	  タイマドライバシミュレータを，高分解能タイマを64ビットにできるよ
	  うに拡張（target_hrt_clear_eventの追加など）．
	- simtimer_ct11mpcore_gccを，高分解能タイマが64ビットの場合に対応．
	- テストプログラム（simt_systim1_64hrt，simt_systim2_64hrt，
	  simt_systim3_64hrt.c）を追加．

・モノトニックタイマ機能拡張パッケージの追加

・コンフィギュレータの仕様変更
	- 静的APIの後に";"がない場合はエラーとするように変更．

・ARMコア依存部，チップ依存部，ターゲット依存部の仕様変更
	- フェイタルデータアボートをエミュレートされたCPU例外と位置付け，
	  CPU例外ハンドラ番号を割り付けた．

●不具合修正

・mrot_rdqの不具合を修正
	- mrot_rdqを拡張サービスコールから呼び出した場合に，TDOM_SELFが，
	  拡張サービスコールを呼び出したタスクが属する保護ドメインになって
	  いた不具合を修正．
	- mrot_rdqを非タスクコンテキストから呼び出した場合に，TPRI_SELFが，
	  実行状態のタスクの優先度になっていた不具合を修正．

・手動メモリ配置の場合のコンフィギュレータの不具合修正
	- CopyLmaを，$datasecListが未定義の場合に対応．

・ARMコア依存部，チップ依存部，ターゲット依存部の不具合の修正
	- CT11MPCoreターゲット依存部で，時間パーティショニングとオーバラン
	  ハンドラを同時に使用している場合のエラーチェックを追加（CT11MPCore＋
	  タイマドライバシミュレータではエラーにしない）．

・その他の不具合修正
	- sample/Makefile中のバナー表示の依存関係記述の修正．
	- 静的APIの最後に";"が抜けている不具合の修正．

●実装改善

・ターゲット拡大対応のための修正
	- kernel_opt.trbとkernel_mem.trbにおいて，USE_LATERPASS_DOMINIBの
	  場合に，GenerateDominibを呼ぶ処理を後に移動．
	- メモリオブジェクトの先頭／終了ラベルの宣言を，ターゲット依存部で
	  変更可能に．

・rot_rdq中の不要なif文を削除

・ARMコア依存部，チップ依存部，ターゲット依存部の実装改善
	- core_test.hにおけるCPU例外の発生コードを見直し．
	- ARM依存のテストプログラム（arm_cpuexc）を追加．
	- sp804.hを，arch/arm_gcc/commonから，target/ct11mpcore_gccに移動．
	- software_term_hookを，target_exitから呼ぶように変更．

・タイマドライバシミュレータの実装改善
	- タイマ割込みの発生時刻の設定状況を表すデータ型（INT_EVENT）を導入. 

・その他の実装改善
	- VALID_TMOUTの定義を変更．
	- check_adjtimのパラメータの型と，エラーチェックの条件式を変更．
	- tTask_inline.hに古いサービスコール（先頭に"i"が付く）が残ってい
	  たのを修正．
	- tSerialPortMain.c内のローカル変数内の型を修正．
	- ATT_MODを「#ifdef TOPPERS_SUPPORT_ATT_MOD」「#endif」で囲む．

●その他（テストプログラム，サンプルプログラム等）

・configureとsample/Makefileの修正
	- configureへのオプションで，ライブラリのリンク記述を追加できるよ
	  うに，configureとsample/Makefileを修正．

・テストプログラムの追加
	- システム状態管理機能のテスト(2)（test_sysman2）を追加．
	- [ARM依存部] ARM向けFPUのテスト(1)（arm_fpu1）を追加．

・テストプログラムの変更
	- test_twdnfyで，短いタイムウィンドウ中でタスクが実行されてしまう
	  ことの対策待ち時間を変更（エラーを起こすケースを減らす）．
	- test_tprot1〜test_tprot4を，test_common.hを使うように変更．

・テストプログラムの不具合修正
	- simt_twd1.cfgの不具合の修正．

・gentest.rbの拡張（HRMP3カーネル向けのものを導入）
	- マルチプロセッサに対応．
	- 元のファイルを置き換える仕様に変更．
	- ローカル変数を定義する機能を追加．

・ドキュメントの充実，コメントの修正

・バージョン番号の更新
	- カーネルとカーネル仕様のバージョン番号を更新．

○ターゲット依存部の要修正箇所（3.1.0 → 3.2.0）

(1) 高分解能タイマが64ビットの場合に対応（オプション）
	- 高分解能タイマを64ビットにできる場合には，必要に応じて対応する．
	  具体的には，ASP3カーネルのポーティングガイドの(3-8-1)，(5-3-1)，
	  (6-13-2-5)，(6-13-2-7)の設定に対応し，tool_svc.hのターゲット依存
	  部に，CAL_SVC_0M_R_UINT64の定義を追加する．

(2) [ARM依存部] software_term_hookの呼び出し箇所変更への対応
	- 必要であれば，target_exitにsoftware_term_hookを呼ぶ処理を追加す
	  る．

----------------------------------------------------------------------

		TOPPERS/HRP3カーネル
		Release 3.0.0 から 3.1.0 への主な変更点

○変更点のリスト

●仕様変更，機能拡張

・タイムウィンドウ通知機能の追加

・LMT_DOMによる制限の抜け道への対応
	- loc_mtxにおいて，E_OACVエラーになる条件を追加［NGKI5124］．

・スケジューリング単位の概念の導入への対応
	- SCHEDNOマクロの定義を追加．
	- mrot_rdq，mget_lod，mget_nthの第1パラメータの名前をschednoに変更．

・保護ドメイン毎の標準セクションを廃止
	- 保護ドメイン毎の標準セクションを登録するコードを削除．
	- ターゲット依存部で，.noinit_kernelセクションに配置するコードを
	  .system_stackに，.text_sharedセクションに配置するコードを
	  .shared_codeに配置するように変更．
	- これに対応するためのサンプルプログラム，テストプログラムの変更．

・ATT_SECのメモリリージョンのパラメータ（regname）を省略可能に
	- 省略した場合に対応するように生成スクリプトを変更．
	- この変更を活用するようにテストプログラムを変更．

・拡張パッケージの追加
	- 動的生成機能拡張パッケージを追加．
	- オーバランハンドラ機能拡張パッケージを追加．
	- 非TECS版システムサービスを追加．

・SILのメモリ空間同期書込み関数の新設
	- sil.hに標準のメモリ空間同期書込み関数を追加．
	- 各ターゲット依存部（またはコア依存部）に，TOPPERS_SIL_WRITE_SYNC
	  の定義を追加．

・コンフィギュレータの仕様変更
	- 条件ディレクティブにより，有効とするC言語プリプロセッサのディレ
	  クティブを選択できるようにした．
	- 文字列パラメータにマクロを記述できるように拡張．

・ARMコア依存部，チップ依存部，ターゲット依存部の拡張・仕様変更
	- FPUサポートを追加．
	- Zynq7000向けチップ依存部とZybo向けターゲット依存部を追加．
	- ターゲット依存のメモリオブジェクトアクセス属性の定義を追加．
	- MMUの設定で，スタック領域はSビット（共有）を立てないように変更．
	- MMUの設定で，非共有のデバイス領域をサポート．
	- 動的生成機能拡張パッケージで，acre_tskでユーザタスクを生成する際
	  に設定するユーザスタック領域の先頭番地とサイズを，8の倍数で良い
	  ことに変更．

・タイマドライバシミュレータの追加
	- タイマドライバシミュレータ（arch/simtimer）を追加．
	- CT11MPCore＋タイマドライバシミュレータ用のターゲットを追加．

・その他の機能拡張
	- コンフィギュレーションスクリプト（configure.rb）に-Bオプションを
	  追加．

●不具合修正

・スケジューリング処理の不具合の修正
	- 時間パーティショニングを使わない場合に，カーネルドメインに属する
	  タスクが，優先度によらずに優先して実行される不具合を修正．
	- タスクの優先度変更時に，ディスパッチされない場合がある不具合を修
	  正．

・get_didの不具合の修正
	- 実行状態のタスクがない場合に対応できるように修正．

・高分解能タイマ割込みの設定漏れの不具合の修正
	- タイムイベントの設定後に，高分解能タイマ割込みの発生タイミングを
	  設定しなければならない状況で，tmevtb_registerを呼んでいた不具合
	  を修正．

・ソフトウェア割込みでSYSTIM型を正しく渡せない不具合の修正
	- set_tim（パラメータが1つで，SYSTIM型）をソフトウェア割込みで呼び
	  出した場合に，パラメータが正しく渡せるように，ターゲット非依存部
	  を修正．
	- ARMコア依存部を，この修正に対応させた．

・ref_tskの不具合の修正
	- 二重待ち状態の時に，tskwaitとwobjidが正しく返らない不具合を修正．

・prb_memとE_MACVエラーのチェックの不具合の修正
	- ユーザスタック領域をタスク毎に保護しない場合に，同じ保護ドメイン
	  に属する他のタスクのユーザスタック領域がアクセスできないと判定さ
	  れる不具合を修正．

・DEF_EXCのエラーチェックの不具合の修正
	- CPU例外ハンドラ番号としては有効だが，DEF_EXCで登録できないものを
	  エラーとして扱えていなかった不具合を修正．

・adj_timで高分解能タイマを無駄に設定する問題の修正
	- adj_timにおいて，is_signal_timeの場合はset_hrt_eventを呼ばないよ
	  うに修正．

・CRE_ALMのエラーチェックの不具合の修正
	- アラーム通知属性としてTA_STAを設定できる（設定してもエラーになら
	  ない）不具合を修正．

・通知機能に関するエラーチェックの修正
	- チェックパスにおいて，オブジェクトIDのエラーを検出した場合に，ア
	  クセス権チェックのコードでコンフィギュレータが落ちる不具合を修正．
	- エラーメッセージの修正．

・シリアルインタフェースドライバの不具合修正
	- FC_START受信時にコールバックを許可していなかった不具合を修正．

・ARMコア依存部，チップ依存部，ターゲット依存部の不具合の修正
	- ret_extsvcのラベルの位置を修正．
	- 割込みコントローラのアクセス後に，メモリバリアが抜けていた不具合
	  を修正．start_dispatchにも，メモリバリアを追加．
	- パラメータが5つのサービスコール呼出しコード（CAL_SVC_5M）の不具
	  合の修正．
	- MPCore依存部で，TCYC_HRTCNTの定義を解除している不具合を修正．
	- call_exit_kernelで，非タスクコンテキストに設定（excpt_nest_count
	  を1に設定）するように修正．
	- RZ/A1チップ依存部で，SIOドライバの終了処理ルーチンで，シリアルポー
	  トのFIFOが空になるのを待つように修正．

・その他の不具合修正
	- ATT_REGとATT_MEMのエラーチェックの不具合を修正．
	- kernel.hにおけるimrot_rdqのマクロ定義を修正．
	- LOG_GET_DID_LEAVEマクロのパラメータを修正．
	- レッドゾーン方式を，メモリリージョン毎に適用するように修正．
	- sample/Makefile中のバナー表示の依存関係記述の修正．
	- コンフィギュレーションスクリプト（configure.rb）のオプションの処
	  理を修正．

●実装改善

・システム周期切換え処理，タイムウィンドウ切換え処理の改善
	- タイムウィンドウ切換え処理を，割込みによって要求せず，直接呼び出
	  すように変更．これに伴い，タイムウィンドウタイマ割込みと高分解能
	  タイマ割込みを同じ優先度にすることに．
	- ディスパッチ保留状態で呼び出されたchg_somで，システム周期停止モー
	  ドから他のモードに変更する際にも，システム周期切換えのペンディン
	  グの仕組みを使用するように変更．

・初期化ルーチンと終了処理ルーチンの処理方法の変更
	- コンフィギュレータで，初期化ルーチンと終了処理ルーチンを呼び出す
	  関数に代えて，それらの数とテーブルを生成し，それを順に呼び出すよ
	  うに変更．

・get_tidでCPUロック状態にしないように変更

・リンカスクリプトの生成方法の変更
	- パス3の生成スクリプトではcfg3_out.ldを，パス4の生成スクリプトで
	  はldscript.ldを，必ず生成することに．
	- Makefileで，sedを使ってcfg3_out.ldとldscript.ldを生成する処理を
	  削除（環境によっては，sedが使えない場合がある）．
	- ターゲット依存部に，ターゲット依存のリンカスクリプトを生成するた
	  めの生成スクリプトを設け，各パスの生成スクリプトから呼び出すよう
	  に変更．

・生成するリンカスクリプトの変更（GNU開発環境）
	- ATT_MODされないオブジェクトモジュールの標準のセクションを，無所
	  属の末尾にリンクするのをやめる（"*"をリンクする記述を削除）．
	- コンパイラが必ず使うライブラリ（GCCでは，libgcc.a）のために，
	  $TARGET_LIBSにリストアップされたオブジェクトモジュールの標準のセ
	  クションを，無所属の末尾にリンクする．
	- ライブラリ中のどの関数をリンクするかを決定するために，リンカスク
	  リプトの先頭に，実際には存在しないセクションをリンクする記述を生
	  成する．
	- ATT_MOD／ATT_SECで登録されなかったセクションを捨てる記述を生成す
	  る（これによりエラーが検出される）．
	- サンプルプログラムとテストプログラムのシステムコンフィギュレーショ
	  ンファイルに，標準のライブラリを登録するATT_MODを追加．

・コンフィギュレータの変更
	- GenerateIncludes（インクルードディレクティブの生成）を新設．
	  IncludeFilesを廃止．
	- rubyの警告が出ないように修正．-wオプションを付与．

・生成スクリプトの変更（クラスに対応する場合の修正を少なくするためなど）
	- $cfgData[:CRE_DOM]を$domDataに変更．
	- 標準メモリリージョンに関するデータを，$standardMemregに入れるよ
	  うに変更．
	- 保護ドメイン共通の標準メモリリージョンに関するデータを
	  $commonMemregに入れ，$commonStdromを廃止．
	- 静的APIのパラメータ名を変更．これにあわせて，$cfgDataと$memObj中
	  のパラメータ名を変更．
	- タイムウィンドウに関する処理方法を改善．
	- 保護ドメインの囲みに関する処理方法を変更．
	- チェックパスで，非タスクコンテキスト用のスタック領域に関するチェッ
	  ク方法を変更．
	- rubyの警告が出ないように修正．

・トレースログ記録のサンプルコードをターゲット非依存部に移動
	- トレースログ記録のサンプルコードを組み込むための記述を，ターゲッ
	  ト非依存部に移動．

・低レベル出力をSIOポートから出力するためのコンポーネントを用意
	- tPutLogSIOPort.cdl，tPutLogSIOPort.cを新設．
	- それを使用するように各ターゲット依存部を変更．

・簡易SIOドライバの改善
	- オープン済みフラグの名称をopenedに統一．
	- 終了処理において，SIOポートをクローズするように変更．
	- SIOポートの二重にオープンしないように変更（統一）．
	- SIOポートのクローズは，オープンした時のみ行うように変更．
	- SIOポートのクローズ時に，オープン済みフラグをクリアしていなかっ
	  た問題を修正．

・システムサービスとライブラリの実装の改善
	- 実行時間分布集計サービスの各サービスコールの返値の型をERに変更．
	- システムログ機能とシステムログタスクの無駄な処理の削除．
	- syslog_printの中で改行を出力するように変更．

・ARMコア依存部，チップ依存部，ターゲット依存部の変更
	- 確保するページテーブル数の決定方法の改善．
	- ARMv5以降では，blx命令を使用するように変更．
	- チップ依存部としてのMPCore依存部（arch/arm_gcc/mpcore）を削除し，
	  ARMコア依存部（arch/arm_gcc/common）にそれに対応するファイルを追
	  加．MPCore依存部を使用するターゲット依存部を，これに対応させる．
	- TCYC_HRTCNT，TSTEP_HRTCNT，TMAX_TWDTIM，TMAX_OVRTIMの定義を，ター
	  ゲット依存部に置くように統一．
	- ターゲット依存部のSIOドライバのコンポーネントを，可能であればチッ
	  プ依存部に移動．
	- 簡易SIOドライバの初期化処理の改善．
	- MPCore依存部のタイマモジュールで，高分解能タイマ割込みの要求方法
	  を変更．スプリアス割込み対策を追加．
	- GIC依存部で，SGIの割込み要求禁止フラグが操作できない場合に対応．
	- CT11MPCore向けのターゲット依存部のタイマモジュールで，オーバラン
	  タイマについても，QEMUで実行している場合には，ロードレジスタに0
	  を設定しないように修正．
	- CT11MPCore向けのターゲット依存部のサンプルプログラム向けの定義で，
	  QEMUで実行している場合には，MEASURE_TWICEを定義するように変更．
	- RZ/A1チップ依存部から，MPCore依存部を使うように変更．
	- RZ/A1向けのアーキテクチャ依存部を，オーバランハンドラ機能拡張パッ
	  ケージに対応させた（ただし，タイマが足りないため，時間パーティショ
	  ニングと同時に使用することはできない）．
	- RZ/A1チップ依存部で，シリアルポートの設定をターゲット依存部で上
	  書きできるように変更．

・ダミーターゲット依存部の変更
	- svc_table.oがリンクされるように，svc_entryのダミー定義を追加．

・その他の変更
	- make_wait，wait_wait_tmout，wobj_make_wait，wobj_make_wait_tmout
	  に，タスク状態を渡すパラメータ（tstat）を追加し，タスク状態の設
	  定をこれらの関数内で行うように変更．
	- request_dispatchをrequest_dispatch_retintにリネーム．
	- signal_timeで，タイムイベントを1つも処理しなかった場合には，シス
	  テムログ機能にメッセージを出すように変更．
	- task.trbに，タスク毎のターゲット依存の処理を追加する仕組み
	  （TargetTaskPrepare）を追加．
	- interrupt.trbとexception.trbに，ターゲット依存のエラーチェックを
	  行う仕組み（TargetCheckCfgInt，TargetCheckDefInh，
	  TargetCheckCreIsr，TargetCheckDefExc）を追加．
	- タイムイベントヒープを保護ドメイン毎に別の変数とするよう変更．
	- kernel_sym.defに，TARGET_MEMATR_SSTACKを追加．
	- 並列makeに対応できるように，sample/Makefileを修正．
	- 中間オブジェクトファイルを置くディレクトリを変更できるように変更．
	- テスト実行スクリプト（testexec.rb）を改良．
	- コンフィギュレータのエラーメッセージの変更．

●その他（テストプログラム，サンプルプログラム等）

・テストプログラムの追加
	- サービスコール呼出しに関するテスト（test_calsvc）を追加．
	- ドメイン間のスケジューリングに関するテスト(1)（test_sched1）を追加．
	- 強制待ち状態に関するテスト(1)（test_suspend1）を追加．
	- 時間パーティショニングに関するテスト(5)（test_tprot5）を追加．
	- タイムウィンドウ通知に関するテスト（test_twdnfy）を追加．
	- タイムウィンドウ管理機能のテスト(1)（simt_twd1）を追加．

・テストプログラムの変更
	- 高分解能タイマテスト用のテストプログラム（hrt_systim?）を，タイ
	  マドライバシミュレータ用のテストプログラム（simt_systim?）に入れ
	  換え．gentest.rbを，それに対応できるように修正．
	- perf4.cの周期ハンドラ中の不要な変数定義を削除．
	- test_raster1.c中の待ち時間を変更．
	- test_tprot1でget_didもテストするように変更．
	- test_tprot3のテスト方法を改善．
	- test_twdnfyのテストを改善．

・サンプルプログラムの変更
	- プロセッサ時間を消費するためのループの中で，volatile変数を読み出
	  すように変更．プロセッサ時間の消費を独立した関数に．
	- PREPARE_RETURN_CPUEXCを使うのをやめる（使い方が間違っていた）．
	- コードとコメントのブラッシュアップ．
	- 出力メッセージの修正．

・性能評価プログラムの修正
	- サービスコールからエラーが返った場合に，プログラムを停止させるよ
	  うに修正．

・ドキュメントの充実，コメントの修正

・バージョン番号の更新
	- カーネルとカーネル仕様のバージョン番号を更新．

○ターゲット依存部の要修正箇所（3.0.0 → 3.1.0）

(1) 生成スクリプトのターゲット非依存部の変更に対応
	- 生成スクリプトのターゲット依存部で，$cfgData[:CRE_DOM]を用いてい
	  る場合には，$domDataに変更する．
	- 生成スクリプトのターゲット依存部で，$domData[domain][:stdrom]（前
	  項の修正前は，$cfgData[:CRE_DOM][domain][:stdrom]）を用いている
	  場合は，$standardMemreg[domain][:stdrom]に変更する．
	  $domData[domain][:stdram]／[:stdsrom]／[:stdsram]についても同様．
	- 生成スクリプトのターゲット依存部で，$commonStdromを用いている場
	  合には，$commonMemreg[:stdrom]に変更する．
	- $cfgDataと$memObj中のパラメータ名を以下の通りに置き換える（ター
	  ゲット依存部で使っていれば）．また，これらのパラメータに対する
	  unquoteは，不要であるため削除する．
		$cfgData[:ATT_REG][key]		[:region]→[:regname]
		$cfgData[:ATT_SEC][key]		[:section]→[:secname]
		$cfgData[:ATT_SEC][key]		[:memreg]→[:regname]
		$cfgData[:ATT_MOD][key]		[:module]→[:modname]
		$memObj[key]				[:module]→[:modname]

(2) リンカスクリプトの生成方法の変更に対応
	- パス3の生成スクリプトでcfg3_out.ldを，パス4の生成スクリプトで
	  ldscript.ldを，必ず生成するように変更する．

(3) request_dispatchをrequest_dispatch_retintにリネーム

(4) CAL_SVC_1M_SYSTIMの定義の追加
	- arch/gcc/tool_svc.hを用いている場合には，ポーティングガイドの
	  「5.2.1 一般のサービスコール」の節を参考に，CAL_SVC_1M_SYSTIMの
	  定義を追加する．

(5) OMIT_USTACK_PROTECTの定義
	- タスクのユーザスタック領域を，そのタスクが属する保護ドメイン全体
	  からアクセスできる（言い換えると，ユーザスタック領域をタスク毎に
	  保護しない）ものとする場合には，OMIT_USTACK_PROTECTをマクロ定義
	  する．

(6) タイムウィンドウタイマ割込みの優先度を変更
	- タイムウィンドウタイマ割込みの優先度を，高分解能タイマ割込みと同
	  じにする．

(7) $TARGET_LIBSの定義
	- target_kernel.trb（または，そこからインクルードするファイル）に
	  おいて，$TARGET_LIBSにコンパイラが必ず用いるライブラリを定義する．

(8) target_twdtimer_raise_intの削除
	- target_twdtimer_raise_intが不要になったので削除する．

(9) メモリ空間同期書込み関数の新設に対応
	- target_sil.h（または，そこからインクルードするファイル）に，
	  TOPPERS_SIL_WRITE_SYNCマクロの定義を追加する．このマクロを実現で
	  きない場合には，TOPPERS_OMIT_SIL_SYNC_WRITEをマクロ定義し，メモ
	  リ空間同期書込み関数の定義を追加する．

(10) 中間オブジェクトファイルを置くディレクトリの変更に対応
	- Makefileのターゲット依存部で，START_OBJS，END_OBJS，HIDDEN_OBJS
	  を定義している場合には，ポーティングガイドの「2.6 リンク方法の設
	  定」の節を参考に，定義を修正する．これらの定義には，"=" ではなく，
	  ":=" を使用することに注意．

(11) カーネルメモリプール領域の先頭番地のチェック方法を指定
	- 動的生成拡張パッケージに対応する場合には，必要に応じて，
	  CHECK_MPK_ALIGNとCHECK_MPK_NONNULLを定義する．

(12) サンプルプログラムの変更に対応
	- 必要であれば，LOOP_REFとTASK_LOOPの値を見直す．

----------------------------------------------------------------------

		TOPPERS/HRP3カーネル
		Release 3.B.0 から 3.0.0 への主な変更点

○変更点のリスト

・ディスパッチが抜ける不具合の修正
	- ext_tsk，ena_dsp，chg_ipmで，ディスパッチが抜ける場合がある不具
	  合を修正した．
	- ASP3カーネルと同様にset_dspflg関数を設け，保留されていたシステム
	  周期切換え処理とタイムウィンドウ切換え処理をその中で実行するよう
	  にした．

・ref_memサービスコールの追加

・get_somサービスコールの追加

・カーネルオブジェクトのデフォルトのアクセス許可ベクタの変更
	- 管理操作に対するデフォルトのアクセス許可パターンを変更した．
	- ACV_DOMを保護ドメインの囲みの外に記述することを可能にした．

・LNK_SECの廃止（ATT_SECへの統合）
	- TA_NOWRITEとTA_NOREADを指定し，TA_EXECを指定せずに，ATT_SECでセ
	  クションを登録することで，LNK_SECの代替ができるようにし，LNK_SEC
	  を廃止した．

・割込み管理機能の拡張
	- clr_int，ras_int，prb_intの3つのサービスコールの追加．
	- それに合わせてターゲット依存部の仕様を拡張／整理．

・ATT_SECのエラーチェック処理の不具合修正
	- ATT_MODがサポートされていない場合のエラーチェック処理に抜けがあっ
	  たのを修正．

・システム周期とタイムウィンドウ切換え処理の不具合修正と改善
	- ena_dspとext_tskにおける処理抜けの修正．
	- タイムウィンドウ長（twdlen）の型をPRCTIMに修正．
	- newscyc_twdswitchとtwdtimer_enableの導入．
	- p_pending_runtwdをpending_twdswitchに置き換え．
	- 保留していたシステム周期切換え処理を実行する際にも，システム周期
	  オーバランをチェックするように修正．

・カーネルの実装改善
	- ext_tskの実装を改善．

・保護ドメイン管理機能に関する生成処理の整理
	- domain_prep.trbを新設して，保護ドメイン管理機能に関する前処理を分離．
	- domain.trb，kernel.trb，kernel_lib.trb中の生成手順を整理．

・メモリオブジェクトの統合処理・配置処理の見直し
	- メモリオブジェクトアクセス属性の概念を導入し，メモリオブジェクト
	  が統合できる条件を緩和．メモリオブジェクトの配置順序の見直し．
	- 標準メモリリージョンに，標準ショートROMリージョンと標準ショート
	  RAMリージョンを追加し，DEF_SRGのパラメータを追加．
	- 標準ROMリージョンと標準RAMリージョンを同じに設定した場合に対応．
	- メモリオブジェクトが空であることの判定方法の修正．
	- ユーザスタック領域の共有条件を狭めた．
	- セクション，メモリオブジェクト，メモリ保護単位のラベルの見直し．
	- kernel_cfg.o，kernel_mem.o，-lkernelを末尾にATT_MODした扱いとす
	  るように変更.
	- メモリオブジェクト間に想定していない隙間がないかのチェックを追加．
	- 空の統合後のメモリオブジェクトを取り除く際に，手前のメモリオブジェ
	  クトのアラインされた終了番地を修正する処理を追加．
	- kernel_lib.trbに，仮メモリオブジェクト初期化ブロックを生成する関
	  数を用意し，kernel.trbとkernel_opt.trbから呼び出すように修正．

・標準のメモリオブジェクト属性を定義したシンボルの新設
	- 標準のメモリオブジェクト属性を定義したシンボル（TA_TEXTSECなど）
	  を新設し，生成スクリプトのターゲット依存部で定義していたそれと同
	  等のシンボル（MEMATR_TEXTなど）を廃止した．

・用語と変数名・ラベル名の見直し
	- 上限番地を，アラインした終了番地に．
	- limitを，aendまたはendに．
	- prsvを，noinitに．

・GNUリンカ向けリンカスクリプトの見直し
	- メモリオブジェクトの統合処理・配置処理の見直しに対応．
	- アライン指定の方法を変更．

・アイドル処理の設計変更（ターゲット依存部のみの修正）
	- アイドル処理中で発生した割込みからは，リターンしない設計に変更．

・割込み要求のセット関数の追加（ターゲット依存部のみの修正）
	- ターゲット依存部で，割込み要求をセットする関数（raise_int）を用
	  意することにした．
	- RZ/A1チップ依存部を，clear_int，probe_int，raise_intを使用するよ
	  うに修正．

・ARMコア依存部，ターゲット依存部の修正
	- タイムウィンドウタイマの処理を，p_runtwdがNULLでない時に呼び出し
	  ているのを，twdtimer_enableがtrueの時に呼び出すように修正．
	- スタックポインタを8バイト境界でアラインさせるように修正．
	- キャッシュの無効化コードの不具合を修正するとともに，全レベルの
	  キャッシュを無効化するように拡張．
	- sil_dly_nseを，分岐予測がある場合に対応できるように修正．
	- core_kernel.trbとcore_opt.trbに，ダミーのTargetCalcMeminibSize関
	  数を用意．
	- メモリ保護単位に関するエラーチェックで，余計なE_SYSエラーが出る
	  のを抑止する処理を修正．
	- MMUのページテーブル設定のための定数値で，APXビットという呼称をや
	  めて，APビットが3ビットある扱いに変更．
	- GICターゲット依存部を，clr_int，ras_int，prb_intをサポートするよ
	  うに修正．その際に，raise_intがソフトウェア生成割込み（SGI）に対
	  応できるように拡張．
	- GICターゲット依存部で，SGIに対応する割込みコンフィギュレーション
	  レジスタには，書き込みを行わないように修正．
	- GIC 390 Errataへの対策を実施．
	- current_cpsr/set_cpsrをcore_rename.defでリネームするのをやめた．
	- GR-PEACH向けのターゲット依存部と，RZ/A1シリーズ向けのチップ依存
	  部を追加．
	- MPCoreチップ依存部のタイマの実装が，高い周波数が入力されている場
	  合に対応できない問題を修正．
	- CT11MPCore向けのターゲット依存部で，コア0以外で実行するための設
	  定を削除．MPCORE依存部の「#ifdef CORE0」を削除．
	- CT11MPCore向けのターゲット依存部のタイマモジュールで，QEMUで実行
	  している場合には，ロードレジスタに0を設定しないように修正．

・コンフィギュレータの修正
	- パス間でデータを受け渡す方法の改善（$globalVarsを導入し，
	  $cfg2Dataと$cfg3Dataを廃止）．
	- 値取得シンボルテーブルに，NumStrクラスのオブジェクトで取得する機
	  能を追加．
	- ポインタ整数定数式パラメータを追加．
	- オブジェクトがカーネルドメインに属していることのチェックの修正．
	- 保護ドメインに属していないことのエラーメッセージの修正．
	- パス2で，SIL_ENDIAN_BIT/LITTLEの誤定義を検出するように修正．

・TECSの導入
	- ASP3カーネルのシステムサービスを，修正を加えて導入．
	- トレースログ記録のサンプルコードのTECS化に伴い，ディレクトリを
	  arch/tracelogに変更．
	- prb_strライブラリを追加．

・システムログ機能の改良
	- ASP3カーネルの最新のシステムログ機能に合わせて修正．

・テストプログラムの追加
	- 自タスクの終了に関するテスト（test_exttsk）を追加．
	- イベントフラグ機能のテスト(1)（test_flg1）を追加．
	- データキュー機能のテスト(1)（test_dtq1）を追加．
	- 割込み管理機能のテスト(1)（test_int1）を追加．
	- prb_strのテスト（test_prbstr）を追加．

・テストプログラムの修正
	- 時間パラメータを，TEST_TIME_CPとTEST_TIME_PROCを用いて記述．
	- 時間パーティショニングに関するテストの改善．
	- タスク終了要求機能に関するテスト(2)（test_raster2）の待ち時間を
	  調整．

・オフセットファイルの生成方法の変更
	- オフセットファイル生成用の生成スクリプトの記述を，生成されるファ
	  イルの内容が想像しやすい形に変更．
	- TARGET_OFFSET_TRBが定義されていたらoffset.hを生成することとし，
	  OMIT_OFFSET_Hを廃止．
	- オフセットファイル生成用の生成スクリプトでのマジックナンバーによ
	  るチェックを削除（チェック内容がコンフィギュレータと重複していた
	  ため）．

・Makefileの修正
	- 各リンク手順の依存リストに，リンカスクリプトファイルを追加．
	- コンパイラに対する-Tオプションを，-Wl,-Tオプションに変更．
	- Makefile.coreにおけるGCC_TARGETの定義を上書き可能にした．
	- -DUSE_CFG_PASS3オプションの追加を，ターゲット非依存部に移動．
	- LDSCRIPT，CFG2_OUT_LDSCRIPT，CFG3_OUT_LDSCRIPTの定義を，ターゲッ
	  ト非依存部に移動．

・サンプルプログラムの修正
	- 割込みの動作確認を行えるように修正（ターゲット依存）．
	- 'V'コマンドでプロセッサ時間を使用するように修正．
	- カーネルの自己診断を行うオプション機能を廃止．

・ダミーのターゲット依存部（target/dummy_gcc）を追加

・その他の修正
	- メッセージバッファ管理領域を確保する時のデータ型を，uint_tから
	  MB_Tに変更．
	- kernel_mem.cにおけるラベルの宣言／参照方法を変更．
	- コンフィギュレータの新しい機能（値をNumStrクラスのオブジェクトで
	  取得，cfg1_out.cにおいてuintptr_t型で値を取得）を使用するように
	  修正．
	- 各rubyスクリプトに，外部エンコーディングをUTF-8にする記述を追加．
	- offsetofの定義を改善．
	- kernel_impl.hからCASTマクロの定義を削除．
	- スケジューリング単位管理ブロック中のp_schedtcbフィールドを，
	  p_predtskにリネーム．
	- テストがエラーになった時に'\007'を出力するように修正．
	- libkernel.aのリンク方法を変更．
	- gentest.rbを，ISRと割込みハンドラを扱えるように修正．
	- genrename.rbのリネーム定義生成ルールの変更．
	- gentest.rbの改善．

・ドキュメントの充実，コメントの修正

・バージョン番号の更新
	- カーネルのバージョン番号を更新．
	- バナーのコピーライトの年を修正．

----------------------------------------------------------------------

		TOPPERS/HRP3カーネル
		Release 2.2.1 から 3.B.0 への主な変更点

○主な変更点のリスト

※ 以下の変更点のリストは，主なもののみをリストアップしたものであり，網
   羅的なリストではない．

・機能の追加／廃止
	- 時間パーティショニング機能を追加．
	- タスク例外処理機能を廃止し，タスク終了要求機能を追加．
	- 待ち禁止状態とそれを操作する機能を廃止．
	- メッセージバッファ機能を標準パッケージに追加．
	- 周期ハンドラ機能とアラームハンドラ機能を，周期通知機能とアラーム
	  通知機能に拡張．
	- システム時刻の調整機能と設定機能を追加．
	- オーバランハンドラ機能を標準パッケージでは廃止．
	- 起動要求をキューイングしないタスクを追加．
	- タスクとスケジューリング状態の参照機能を追加．
	- 手動メモリ配置をサポート．

・拡張パッケージの追加／廃止
	- メッセージバッファ機能拡張パッケージを廃止（標準パッケージに）．
	- 動的生成機能拡張パッケージは現時点では未サポート．
	- オーバランハンドラ機能拡張パッケージは現時点では未サポート．

・仕様の変更
	- SIZE型をsize_t型に変更．
	- システム時刻，相対時間，タイムアウト時間の時間単位を，マイクロ秒
	  に変更．システム時刻のサイズを64ビットに変更．相対時間とタイムア
	  ウト時間のサイズを32ビットと規定．タイムアウト時間を符号無し整数
	  型に変更．
	- サービスコール名が"i"で始まる非タスクコンテキスト専用のサービスコー
	  ルを廃止し，非タスクコンテキストからもタスクコンテキストと同じ名
	  称のサービスコールを呼び出せるように．
	- CRE_TSKのstk，CRE_DTQのdtqmb，CRE_PDQのpdqmb，CRE_MBFのmbfmb，
	  CRE_MPFのmpfとmpfmb，DEF_ICSのistkの記述を省略可能にした．
	- ミューテックスのロック解除は，ロックしたのと逆順で行わなければな
	  らないものとした．
	- TA_MEMPRSVを，意味を逆にして，TA_MEMZEROに置き換え．
	- dis_intとena_intを，非タスクコンテキストから呼び出せるように．
	- ATA_YYYの機能をATT_YYYに統合し，ATA_YYYを廃止．
	- ATT_ISRを廃止して，CRE_ISRを追加．
	- get_utmを廃止して，fch_hrtを追加．
	- 割込みサービスルーチンとタイムイベントハンドラの実行開始／リター
	  ン時の割込み優先度マスクの扱いを変更．

・タイムイベント処理のティックレス化
	- タイムイベント処理モジュールを全面的に修正．

・スケジューラの実装の変更
	- アイドル処理の実装方法を変更（主にターゲット依存部）．
	- reqflgとipmflgを廃止．disdspをenadspに変更．
	- スケジューラの関数が，ディスパッチの要否を返すのをやめた．
	- p_schedtskの意味を，最高優先順位のタスクから，実行すべきタスクに
	  変更（ディスパッチ保留状態での扱いが異なる）．

・Makefileの修正
	- 依存関係ファイルを，GCCの-MDオプションを用いて生成するように修正．
	- 変数を整理（リネーム，新設，廃止等）．

・Ruby版コンフィギュレータの導入
	- テンプレートファイルを，Rubyで記述された生成スクリプトに置き換え．
	- kernel_api.csvをkernel_api.defにリネームし，フォーマットを変更．
	- kernel_def.csvをkernel_sym.defにリネームし，フォーマットを変更．

・ユーティリティのRuby化
	- コンフィギュレーションスクリプト（configure）と5つのユーティリティ
	  プログラムを，PerlからRubyにポーティング．

・その他の実装の変更
	- 生成スクリプト（テンプレートファイル）を，機能モジュール毎に分割．
	- 静的エラーのチェック方法（CHECKマクロの構成）を変更．
	- サービスコールの出口ログマクロのパラメータを変更．
	- lock_cpu／unlock_cpu／sense_lockを，タスクコンテキスト用と非タス
	  クコンテキスト用で別々に用意するのをやめた．
	- タスクディスパッチできる状態において，CPUロック状態に遷移／復帰さ
	  せる関数として，lock_cpu_dsp／unlock_cpu_dspを導入した．
	- 非タスクコンテキストにおいてタスク切換えが必要になった場合に，
	  request_dispatchを呼ぶように修正した（ARM Cortex-M対応）．
	- 一時的にCPUロック状態を解除する時に，割込みが受け付けられるように
	  するための関数として，delay_for_interruptを呼び出すようにした．
	- DOMINIBへのポインタを，TCBに入れるように変更．
	- TCB中での待ち状態の表現方法を変更．
	- WINFO_FLG中のwaiptnとflgptnを共用（flgptnを廃止）．
	- WINFO_SDTQ／SPDQとWINFO_RDTQ／RPDQを区別して扱うように修正．
	- タイムイベントヒープ中での位置の表現を，インデックスからポインタ
	  に変更．
	- タイムイベントの発生時刻を，タイムイベントブロック中に持つように
	  変更．
	- OVRTIM型をPRCTIM型にリネーム．
	- TOPPERS_LABEL_ASMの廃止．
	- 拡張サービスコールの構成方法を変更．

・コンフィギュレーションスクリプト（configure.rb）の仕様変更

・サンプルプログラムの機能追加

・テストプログラムの追加

・バージョン番号の更新
	- カーネルのバージョン番号を更新．

----------------------------------------------------------------------
